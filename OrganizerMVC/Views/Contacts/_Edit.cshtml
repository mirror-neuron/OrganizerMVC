@model OrganizerMVC.Models.Contacts

@*using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div id="detailsPartialView" class="w3-row">
            <div class="w3-col l8">
                <div class="w3-col l8">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <h3 class="form-group">
                        @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                    <br />
                    @Model.Name<br />
                    @Model.Patronymic</h3>
                    <p>
                        <i class="fa fa-calendar-plus-o" aria-hidden="true"></i> @Model.Birthday.Value.ToShortDateString()
                    </p>
                    <p>
                        <i class="fa fa-building-o" aria-hidden="true"></i> @Model.Organization
                    </p>
                    <p>
                        <i class="fa fa-briefcase" aria-hidden="true"></i> @Model.Position
                    </p>
                    @foreach (var item in @Model.ContactsPhones)
                    {
                        <p>
                            <i class="fa fa-phone" aria-hidden="true"></i> @item.Phone
                        </p>
                    }
                    @foreach (var item in @Model.ContactsEmails)
                    {
                        <p>
                            <i class="fa fa-envelope" aria-hidden="true"></i> @item.Email
                        </p>
                    }
                    @foreach (var item in @Model.ContactsSkypes)
                    {
                        <p>
                            <i class="fa fa-skype" aria-hidden="true"></i> @item.Skype
                        </p>
                    }
                </div>
            </div>
            <div class="w3-col l4">
                @switch (Model.Gender)
                {
                    case 0:     //Female
                        switch (Model.Name.Length % 2)
                        {
                            case 0: <img class="w3-card-4" src="/Content/images/avatar0.png" style="width:100%" /> break;
                            default: <img class="w3-card-4" src="/Content/images/avatar00.png" style="width:100%" /> break;
                        }
                        break;
                    case 1:     //Male
                        switch (Model.Name.Length % 2)
                        {
                            case 0: <img class="w3-card-4" src="/Content/images/avatar1.png" style="width:100%" /> break;
                            default: <img class="w3-card-4" src="/Content/images/avatar11.png" style="width:100%" /> break;
                        }
                        break;
                    default:    //Unknown
                        <img class="w3-card-4" src="/Content/images/avatar2.png" style="width:100%" />
                        break;
                }
            </div>
        </div>*@


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="w3-col l8">
        <div class="w3-col l8">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Patronymic, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Patronymic, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Patronymic, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Organization, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Organization, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Organization, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}